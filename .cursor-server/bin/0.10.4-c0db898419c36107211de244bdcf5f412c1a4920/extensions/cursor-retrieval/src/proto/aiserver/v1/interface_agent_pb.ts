// @generated by protoc-gen-es v1.2.1 with parameter "target=ts"
// @generated from file aiserver/v1/interface_agent.proto (package aiserver.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message aiserver.v1.InterfaceAgentClientState
 */
export class InterfaceAgentClientState extends Message<InterfaceAgentClientState> {
  /**
   * the path of the interface file
   *
   * @generated from field: string interface_relative_workspace_path = 3;
   */
  interfaceRelativeWorkspacePath = "";

  /**
   * the lines of the interface file
   *
   * @generated from field: repeated string interface_lines = 4;
   */
  interfaceLines: string[] = [];

  /**
   * the path of the test file, if it exists
   *
   * @generated from field: optional string test_relative_workspace_path = 5;
   */
  testRelativeWorkspacePath?: string;

  /**
   * @generated from field: repeated string test_lines = 10;
   */
  testLines: string[] = [];

  /**
   * the path of the implementation file, if it exists
   *
   * @generated from field: optional string implementation_relative_workspace_path = 6;
   */
  implementationRelativeWorkspacePath?: string;

  /**
   * the lines of the implementation file
   *
   * @generated from field: repeated string implementation_lines = 7;
   */
  implementationLines: string[] = [];

  /**
   * the language used
   *
   * @generated from field: string language = 8;
   */
  language = "";

  /**
   * the testing framework used
   *
   * @generated from field: string testing_framework = 9;
   */
  testingFramework = "";

  constructor(data?: PartialMessage<InterfaceAgentClientState>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "aiserver.v1.InterfaceAgentClientState";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 3, name: "interface_relative_workspace_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "interface_lines", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "test_relative_workspace_path", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "test_lines", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "implementation_relative_workspace_path", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "implementation_lines", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "language", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "testing_framework", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InterfaceAgentClientState {
    return new InterfaceAgentClientState().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InterfaceAgentClientState {
    return new InterfaceAgentClientState().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InterfaceAgentClientState {
    return new InterfaceAgentClientState().fromJsonString(jsonString, options);
  }

  static equals(a: InterfaceAgentClientState | PlainMessage<InterfaceAgentClientState> | undefined, b: InterfaceAgentClientState | PlainMessage<InterfaceAgentClientState> | undefined): boolean {
    return proto3.util.equals(InterfaceAgentClientState, a, b);
  }
}

/**
 * this status is sent back in progress updates and shown to the user
 *
 * @generated from message aiserver.v1.InterfaceAgentStatus
 */
export class InterfaceAgentStatus extends Message<InterfaceAgentStatus> {
  /**
   * @generated from field: aiserver.v1.InterfaceAgentStatus.Status validate_configuration = 1;
   */
  validateConfiguration = InterfaceAgentStatus_Status.UNSPECIFIED;

  /**
   * @generated from field: aiserver.v1.InterfaceAgentStatus.Status stub_new_function = 2;
   */
  stubNewFunction = InterfaceAgentStatus_Status.UNSPECIFIED;

  /**
   * @generated from field: aiserver.v1.InterfaceAgentStatus.Status verify_spec = 3;
   */
  verifySpec = InterfaceAgentStatus_Status.UNSPECIFIED;

  /**
   * @generated from field: aiserver.v1.InterfaceAgentStatus.Status write_test_plan = 15;
   */
  writeTestPlan = InterfaceAgentStatus_Status.UNSPECIFIED;

  /**
   * @generated from field: aiserver.v1.InterfaceAgentStatus.Status write_tests = 4;
   */
  writeTests = InterfaceAgentStatus_Status.UNSPECIFIED;

  /**
   * @generated from field: aiserver.v1.InterfaceAgentStatus.Status write_implementation = 5;
   */
  writeImplementation = InterfaceAgentStatus_Status.UNSPECIFIED;

  /**
   * @generated from field: aiserver.v1.InterfaceAgentStatus.Status implement_new_function = 6;
   */
  implementNewFunction = InterfaceAgentStatus_Status.UNSPECIFIED;

  /**
   * @generated from field: aiserver.v1.InterfaceAgentStatus.Status run_tests = 7;
   */
  runTests = InterfaceAgentStatus_Status.UNSPECIFIED;

  /**
   * @generated from field: string validate_configuration_message = 8;
   */
  validateConfigurationMessage = "";

  /**
   * @generated from field: string stub_new_function_message = 9;
   */
  stubNewFunctionMessage = "";

  /**
   * @generated from field: string verify_spec_message = 10;
   */
  verifySpecMessage = "";

  /**
   * @generated from field: string write_test_plan_message = 16;
   */
  writeTestPlanMessage = "";

  /**
   * @generated from field: string write_tests_message = 11;
   */
  writeTestsMessage = "";

  /**
   * @generated from field: string write_implementation_message = 12;
   */
  writeImplementationMessage = "";

  /**
   * @generated from field: string implement_new_function_message = 13;
   */
  implementNewFunctionMessage = "";

  /**
   * @generated from field: string run_tests_message = 14;
   */
  runTestsMessage = "";

  constructor(data?: PartialMessage<InterfaceAgentStatus>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "aiserver.v1.InterfaceAgentStatus";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "validate_configuration", kind: "enum", T: proto3.getEnumType(InterfaceAgentStatus_Status) },
    { no: 2, name: "stub_new_function", kind: "enum", T: proto3.getEnumType(InterfaceAgentStatus_Status) },
    { no: 3, name: "verify_spec", kind: "enum", T: proto3.getEnumType(InterfaceAgentStatus_Status) },
    { no: 15, name: "write_test_plan", kind: "enum", T: proto3.getEnumType(InterfaceAgentStatus_Status) },
    { no: 4, name: "write_tests", kind: "enum", T: proto3.getEnumType(InterfaceAgentStatus_Status) },
    { no: 5, name: "write_implementation", kind: "enum", T: proto3.getEnumType(InterfaceAgentStatus_Status) },
    { no: 6, name: "implement_new_function", kind: "enum", T: proto3.getEnumType(InterfaceAgentStatus_Status) },
    { no: 7, name: "run_tests", kind: "enum", T: proto3.getEnumType(InterfaceAgentStatus_Status) },
    { no: 8, name: "validate_configuration_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "stub_new_function_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "verify_spec_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "write_test_plan_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "write_tests_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "write_implementation_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "implement_new_function_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "run_tests_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InterfaceAgentStatus {
    return new InterfaceAgentStatus().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InterfaceAgentStatus {
    return new InterfaceAgentStatus().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InterfaceAgentStatus {
    return new InterfaceAgentStatus().fromJsonString(jsonString, options);
  }

  static equals(a: InterfaceAgentStatus | PlainMessage<InterfaceAgentStatus> | undefined, b: InterfaceAgentStatus | PlainMessage<InterfaceAgentStatus> | undefined): boolean {
    return proto3.util.equals(InterfaceAgentStatus, a, b);
  }
}

/**
 * @generated from enum aiserver.v1.InterfaceAgentStatus.Status
 */
export enum InterfaceAgentStatus_Status {
  /**
   * @generated from enum value: STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: STATUS_WAITING = 1;
   */
  WAITING = 1,

  /**
   * @generated from enum value: STATUS_RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * @generated from enum value: STATUS_SUCCESS = 3;
   */
  SUCCESS = 3,

  /**
   * @generated from enum value: STATUS_FAILURE = 4;
   */
  FAILURE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(InterfaceAgentStatus_Status)
proto3.util.setEnumType(InterfaceAgentStatus_Status, "aiserver.v1.InterfaceAgentStatus.Status", [
  { no: 0, name: "STATUS_UNSPECIFIED" },
  { no: 1, name: "STATUS_WAITING" },
  { no: 2, name: "STATUS_RUNNING" },
  { no: 3, name: "STATUS_SUCCESS" },
  { no: 4, name: "STATUS_FAILURE" },
]);

