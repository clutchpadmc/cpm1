// @generated by protoc-gen-connect-web v0.6.0 with parameter "target=ts"
// @generated from file aiserver/v1/uploadserver.proto (package aiserver.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetPagesRequest, MarkAsPublicRequest, NewDocumentationRequest, Pages, UploadDocumentationRequest, UploadedStatus, UploadedStatusRequest, UploadResponse } from './uploadserver_pb';
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service aiserver.v1.UploadService
 */
export const UploadService = {
  typeName: "aiserver.v1.UploadService",
  methods: {
    /**
     * Request to upload a new piece of documentation to the server
     *
     * @generated from rpc aiserver.v1.UploadService.UploadDocumentation
     */
    uploadDocumentation: {
      name: "UploadDocumentation",
      I: NewDocumentationRequest,
      O: UploadResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc aiserver.v1.UploadService.UploadDocumentationStatus
     */
    uploadDocumentationStatus: {
      name: "UploadDocumentationStatus",
      I: UploadDocumentationRequest,
      O: UploadedStatus,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc aiserver.v1.UploadService.MarkAsPublic
     */
    markAsPublic: {
      name: "MarkAsPublic",
      I: MarkAsPublicRequest,
      O: UploadedStatus,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc aiserver.v1.UploadService.UploadStatus
     */
    uploadStatus: {
      name: "UploadStatus",
      I: UploadedStatusRequest,
      O: UploadedStatus,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc aiserver.v1.UploadService.GetPages
     */
    getPages: {
      name: "GetPages",
      I: GetPagesRequest,
      O: Pages,
      kind: MethodKind.Unary,
    },
  }
} as const;

