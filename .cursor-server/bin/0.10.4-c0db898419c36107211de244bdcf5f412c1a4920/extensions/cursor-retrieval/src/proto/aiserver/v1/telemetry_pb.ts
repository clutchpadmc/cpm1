// @generated by protoc-gen-es v1.2.1 with parameter "target=ts"
// @generated from file aiserver/v1/telemetry.proto (package aiserver.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message aiserver.v1.ReportInlineActionRequest
 */
export class ReportInlineActionRequest extends Message<ReportInlineActionRequest> {
  /**
   * @generated from field: string action = 1;
   */
  action = "";

  /**
   * @generated from field: string generation_uuid = 2;
   */
  generationUuid = "";

  constructor(data?: PartialMessage<ReportInlineActionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "aiserver.v1.ReportInlineActionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "action", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "generation_uuid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReportInlineActionRequest {
    return new ReportInlineActionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReportInlineActionRequest {
    return new ReportInlineActionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReportInlineActionRequest {
    return new ReportInlineActionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ReportInlineActionRequest | PlainMessage<ReportInlineActionRequest> | undefined, b: ReportInlineActionRequest | PlainMessage<ReportInlineActionRequest> | undefined): boolean {
    return proto3.util.equals(ReportInlineActionRequest, a, b);
  }
}

/**
 * @generated from message aiserver.v1.ReportInlineActionResponse
 */
export class ReportInlineActionResponse extends Message<ReportInlineActionResponse> {
  constructor(data?: PartialMessage<ReportInlineActionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "aiserver.v1.ReportInlineActionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReportInlineActionResponse {
    return new ReportInlineActionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReportInlineActionResponse {
    return new ReportInlineActionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReportInlineActionResponse {
    return new ReportInlineActionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ReportInlineActionResponse | PlainMessage<ReportInlineActionResponse> | undefined, b: ReportInlineActionResponse | PlainMessage<ReportInlineActionResponse> | undefined): boolean {
    return proto3.util.equals(ReportInlineActionResponse, a, b);
  }
}

