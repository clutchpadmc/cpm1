// @generated by protoc-gen-es v1.2.1 with parameter "target=ts"
// @generated from file aiserver/v1/inlineGpt4.proto (package aiserver.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { CurrentFileInfo } from './utils_pb';

/**
 * @generated from message aiserver.v1.InlineGPT4PromptPropsv1
 */
export class InlineGPT4PromptPropsv1 extends Message<InlineGPT4PromptPropsv1> {
  /**
   * @generated from field: aiserver.v1.CurrentFileInfo current_file = 1;
   */
  currentFile?: CurrentFileInfo;

  constructor(data?: PartialMessage<InlineGPT4PromptPropsv1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "aiserver.v1.InlineGPT4PromptPropsv1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "current_file", kind: "message", T: CurrentFileInfo },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InlineGPT4PromptPropsv1 {
    return new InlineGPT4PromptPropsv1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InlineGPT4PromptPropsv1 {
    return new InlineGPT4PromptPropsv1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InlineGPT4PromptPropsv1 {
    return new InlineGPT4PromptPropsv1().fromJsonString(jsonString, options);
  }

  static equals(a: InlineGPT4PromptPropsv1 | PlainMessage<InlineGPT4PromptPropsv1> | undefined, b: InlineGPT4PromptPropsv1 | PlainMessage<InlineGPT4PromptPropsv1> | undefined): boolean {
    return proto3.util.equals(InlineGPT4PromptPropsv1, a, b);
  }
}

